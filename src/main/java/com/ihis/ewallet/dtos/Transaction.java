package com.ihis.ewallet.dtos;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.ihis.ewallet.converter.LocalDateTimeConverter;
import com.ihis.ewallet.responsedtos.TransferDetailsRequest;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@DynamoDBTable(tableName = "Transaction")
@NoArgsConstructor
public class Transaction {

	public static enum TRANSFER_TYPE {
		TRANSFER
	}
	
	@DynamoDBHashKey
	private String id;
	private String from;
	private String to;
	private BigDecimal amount;
	private String type;
	@DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
	private LocalDateTime dteTransfered;
	
	public Transaction(String id, String from, String to, BigDecimal amount, String type, LocalDateTime dteTransfered) {
		this.id = id;
		this.from = from;
		this.to = to;
		this.amount = amount;
		this.type = type;
		this.dteTransfered = dteTransfered;
	}
	
	public static Transaction format(TransferDetailsRequest transferDetails, String id, LocalDateTime dteTransfered) {
		return new Transaction(id, transferDetails.getEmail(), transferDetails.getTransferee(), transferDetails.getAmount(), transferDetails.getType(), dteTransfered);
	}
}
